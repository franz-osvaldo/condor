<div class="row">
  <div class="col-md-4 form_container">
    <div class="form_header text-center">
      <i class="fa fa-list-ol" aria-hidden="true"></i> Inspecciones programadas
    </div>
    <%= form_tag "/fleets/get_graph", remote: true %>
    <div class="form-group aircrafts">
      <%= label_tag :fleet_fleet_id, 'Aeronave' %>
      <%= collection_select :fleet, :fleet_id, @fleets, :id, :name, {prompt: 'Seleccionar'}, {class: 'form-control'} %>
    </div>
    <div class="systems_container">

    </div>

  </div>


  <div class="col-md-8">
    <div class="table_container">
      <div class="row table_head">
        <div class="col-md-12">Inspecciones futuras</div>
      </div>
      <div class="nano">
        <div class="content">
          <div id="container" style="min-width: 310px; max-width: 400px; height: 300px; margin: 0 auto"></div>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="modal_container"></div>
<script type="text/javascript" charset="utf-8">
  $(document).ready(function () {
    $(".nano").nanoScroller({ scroll: 'bottom' });
    $('.aircrafts').on('change', 'select', function () {
      if (!($(this).val().length == 0)){
        $.ajax({
          method: 'GET',
          url: ' 	/fleets/'+$(this).val()+'/get_systems',
          dataType: 'script'
        });
      }
    });



    $('#container').highcharts({

          chart: {
            type: 'gauge',
            plotBackgroundColor: null,
            plotBackgroundImage: null,
            plotBorderWidth: 0,
            plotShadow: false
          },

          title: {
            text: 'Supplementary Check 50 Fh'
          },

          pane: {
            startAngle: -150,
            endAngle: 150,
            background: [{
              backgroundColor: {
                linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
                stops: [
                  [0, '#FFF'],
                  [1, '#333']
                ]
              },
              borderWidth: 0,
              outerRadius: '109%'
            }, {
              backgroundColor: {
                linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
                stops: [
                  [0, '#333'],
                  [1, '#FFF']
                ]
              },
              borderWidth: 1,
              outerRadius: '107%'
            }, {
              // default background
            }, {
              backgroundColor: '#DDD',
              borderWidth: 0,
              outerRadius: '105%',
              innerRadius: '103%'
            }]
          },

          // the value axis
          yAxis: {
            min: 0,
            max: 200,

            minorTickInterval: 'auto',
            minorTickWidth: 1,
            minorTickLength: 10,
            minorTickPosition: 'inside',
            minorTickColor: '#666',

            tickPixelInterval: 30,
            tickWidth: 2,
            tickPosition: 'inside',
            tickLength: 10,
            tickColor: '#666',
            labels: {
              step: 2,
              rotation: 'auto'
            },
            title: {
              text: 'km/h'
            },
            plotBands: [{
              from: 0,
              to: 120,
              color: '#55BF3B' // green
            }, {
              from: 120,
              to: 160,
              color: '#DDDF0D' // yellow
            }, {
              from: 160,
              to: 200,
              color: '#DF5353' // red
            }]
          },

          series: [{
            name: 'Speed',
            data: [20],
            tooltip: {
              valueSuffix: 'Flight hours'
            }
          }]

        },
        // Add some life
        function (chart) {
          if (!chart.renderer.forExport) {
            setInterval(function () {
              var point = chart.series[0].points[0],
                  newVal,
                  inc = Math.round((Math.random() - 0.5) * 20);

              newVal = point.y + inc;
              if (newVal < 0 || newVal > 200) {
                newVal = point.y - inc;
              }

              point.update(newVal);

            }, 3000);
          }
        });

















  });
</script>
